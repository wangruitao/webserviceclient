
package com.template.org.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.template.com.service.ObjectFactory;
import org.template.com.service.User;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://service.com.template.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * 
     * @return
     *     returns java.util.List<org.template.com.service.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.FindAllResponse")
    public List<User> findAll();

    /**
     * 
     * @param id
     * @return
     *     returns org.template.com.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByUserId", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.FindByUserId")
    @ResponseWrapper(localName = "findByUserIdResponse", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.FindByUserIdResponse")
    public User findByUserId(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.DeleteResponse")
    public boolean delete(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

    /**
     * 
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.UpdateResponse")
    public boolean update(
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @param user
     * @return
     *     returns org.template.com.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "save", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.Save")
    @ResponseWrapper(localName = "saveResponse", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.SaveResponse")
    public User save(
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @param arg0
     * @return
     *     returns org.template.com.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loadUserByLoginName", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.LoadUserByLoginName")
    @ResponseWrapper(localName = "loadUserByLoginNameResponse", targetNamespace = "http://service.com.template.org/", className = "org.template.com.service.LoadUserByLoginNameResponse")
    public User loadUserByLoginName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
